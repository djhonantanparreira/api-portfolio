{
    "openapi": "3.0.0",
    "info": {
        "title": "My Portfolio API Documentation",
        "description": "In this documentation, you can consult the API endpoints and also test all available routes.",
        "contact": {
            "email": "djhonantanparreira@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api-portfolio-dev.onrender.com/",
            "description": "Production Server"
        },
        {
            "url": "http://localhost:3000",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/users/register": {
            "post": {
                "summary": "Create a new user",
                "description": "Route responsible for creating a new user.",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "User Example",
                                    "value": {
                                        "name": "Ursa Alemã",
                                        "email": "ursa@gmail.com",
                                        "password": "12345"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error creating user."
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "List all users",
                "description": "Route responsible for listing all users.",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error listing users."
                    }
                }
            }
        },
        "/api/users/{id}": {
            "patch": {
                "summary": "Update user by ID",
                "description": "Route responsible for updating a user.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "summary": "User Example",
                                "value": {
                                    "name": "Ursa Alemã",
                                    "email": "ursa@gmail.com",
                                    "password": "12345"
                                }
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "password"
                        ]
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Please fill all fields!"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "summary": "Login to my portfolio website",
                "description": "Route responsible for authenticating a user.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "User Example",
                                    "value": {
                                        "email": "admin@wow.com",
                                        "password": "12345"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email or password"
                    }
                }
            }
        },
        "/api/projects": {
            "post": {
                "summary": "Create a new project",
                "description": "Route responsible for creating a new project.",
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "Project Example",
                                    "value": {
                                        "title": "My Portfolio",
                                        "description": "My personal portfolio",
                                        "technologies": [
                                            "ReactJS",
                                            "NodeJS",
                                            "MongoDB"
                                        ],
                                        "link": "www.djhonantanparreira.com",
                                        "image": "https://www.djhonantanparreira.com/image.png"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Please fill all fields"
                    }
                }
            },
            "get": {
                "summary": "List all projects",
                "description": "Route responsible for listing all projects.",
                "tags": [
                    "Projects"
                ],
                "responses": {
                    "200": {
                        "description": "List of all projects.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Projects not found."
                    }
                }
            }
        },
        "/api/projects/{id}": {
            "get": {
                "summary": "List project by ID",
                "description": "Route responsible for listing a project by ID.",
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Project ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Project not found."
                    }
                }
            },
            "patch": {
                "summary": "Update project by ID",
                "description": "Route responsible for updating a project.",
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Project ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "Project Example",
                                    "value": {
                                        "title": "My Portfolio",
                                        "description": "My personal portfolio",
                                        "technologies": [
                                            "ReactJS",
                                            "NodeJS",
                                            "MongoDB"
                                        ],
                                        "link": "www.djhonantanparreira.com",
                                        "image": "https://www.djhonantanparreira.com/image.png"
                                    }
                                }
                            }
                        }
                    },
                    "required": [
                        "title",
                        "description",
                        "technologies"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "Project updated!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You are not allowed to update this project"
                    },
                    "400": {
                        "description": "Please fill all fields!"
                    }
                }
            },
            "delete": {
                "summary": "Delete project by ID",
                "description": "Route responsible for deleting a project.",
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Project ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted!"
                    },
                    "403": {
                        "description": "You are not allowed to delete this project"
                    }
                }
            }
        },
        "/api/projects/like/{id}": {
            "patch": {
                "summary": "Like a project or undo like",
                "description": "Route responsible for liking a project or undoing the like.",
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Project ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project liked!"
                    },
                    "400": {
                        "description": "Error liking project."
                    }
                }
            }
        },
        "/projects/comment/{id}": {
            "patch": {
                "summary": "Comment on a project",
                "description": "Route responsible for commenting on a project.",
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Project ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "Comment Example",
                                    "value": {
                                        "message": "Great project!"
                                    }
                                }
                            }
                        }
                    },
                    "required": [
                        "message"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "Comment added!"
                    },
                    "400": {
                        "description": "Write a message to comment!"
                    }
                }
            }
        },
        "/projects/{idProject}/{idComment}": {
            "patch": {
                "summary": "Delete comment on a project",
                "description": "Route responsible for deleting a comment on a project.",
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "idProject",
                        "in": "path",
                        "required": true,
                        "description": "Project ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "idComment",
                        "in": "path",
                        "required": true,
                        "description": "Comment ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted!"
                    },
                    "403": {
                        "description": "You are not allowed to delete this comment"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "Project": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "technologies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "link": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "title",
                    "description",
                    "technologies"
                ]
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ]
            }
        }
    }
}